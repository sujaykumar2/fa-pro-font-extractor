name: Font Awesome Glyph Sync

on:
  repository_dispatch:
    types: [trigger-from-figma]

permissions:
  contents: write

jobs:
  sync-font:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          pip install fonttools

      - name: Get Latest FA Release Version
        id: get_version
        run: |
          VERSION=$(curl -s https://api.github.com/repos/FortAwesome/Font-Awesome/releases/latest | jq -r .tag_name)
          echo "Latest version: $VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Check for Update
        id: compare
        run: |
          LATEST="${{ steps.get_version.outputs.version }}"
          if [[ -f .last_version && "$(cat .last_version)" == "$LATEST" ]]; then
            echo "No new version. Skipping."
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "New version detected: $LATEST"
          echo "changed=true" >> "$GITHUB_OUTPUT"

      - name: Download FontAwesome Pro ZIP
        if: steps.compare.outputs.changed == 'true'
        run: |
          LATEST="${{ steps.get_version.outputs.version }}"
          URL="https://pro.fontawesome.com/releases/v$LATEST/fontawesome-pro-$LATEST-desktop.zip"
          echo "Downloading from: $URL"
          curl -L -o fa-pro.zip "$URL" \
            -H "Authorization: Bearer ${{ secrets.FA_AUTH_TOKEN }}"
          unzip -o fa-pro.zip -d fa-pro

      - name: Extract Unicode from TTF
        if: steps.compare.outputs.changed == 'true'
        run: python extract_unicode.py

      - name: Save Latest Version
        if: steps.compare.outputs.changed == 'true'
        run: |
          echo "${{ steps.get_version.outputs.version }}" > .last_version

      - name: Commit & Push Output
        if: steps.compare.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add glyphs.csv .last_version
          git commit -m "Update glyphs.csv for version ${{ steps.get_version.outputs.version }}"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main
